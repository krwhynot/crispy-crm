name: 🗄️ Deploy Supabase Backend
on:
    push:
        branches:
            - main
        paths:
            - 'supabase/**'
            - '.github/workflows/supabase-deploy.yml'
    workflow_dispatch:  # Allow manual deployment

concurrency:
    group: supabase-deploy-${{ github.ref }}
    cancel-in-progress: true

permissions:
    contents: read

jobs:
    deploy-backend:
        name: 🗄️ Deploy Backend
        runs-on: ubuntu-latest
        timeout-minutes: 10

        env:
            SUPABASE_ACCESS_TOKEN: ${{ secrets.SUPABASE_ACCESS_TOKEN }}
            SUPABASE_DB_PASSWORD: ${{ secrets.SUPABASE_DB_PASSWORD }}
            SUPABASE_PROJECT_ID: ${{ secrets.SUPABASE_PROJECT_ID }}
            IS_SUPABASE_CONFIGURED: ${{ secrets.SUPABASE_ACCESS_TOKEN && secrets.SUPABASE_DB_PASSWORD && secrets.SUPABASE_PROJECT_ID }}

        steps:
            - name: 📥 Checkout repository
              uses: actions/checkout@v4

            - name: ⚙️ Setup Node.js
              uses: actions/setup-node@v4
              with:
                  node-version: 22
                  cache: npm

            - name: ⚙️ Setup Supabase CLI
              uses: supabase/setup-cli@v1

            - name: 📥 Install dependencies
              run: npm install

            - if: ${{ env.IS_SUPABASE_CONFIGURED }}
              name: 🔗 Link to Supabase project
              run: npx supabase link --project-ref $SUPABASE_PROJECT_ID

            - if: ${{ env.IS_SUPABASE_CONFIGURED }}
              name: 📡 Push database migrations
              run: npx supabase db push

            - if: ${{ env.IS_SUPABASE_CONFIGURED && secrets.ALLOWED_ORIGINS }}
              name: 🔐 Configure CORS allowed origins
              run: npx supabase secrets set ALLOWED_ORIGINS="${{ secrets.ALLOWED_ORIGINS }}"

            - if: ${{ env.IS_SUPABASE_CONFIGURED && secrets.DENO_ENV }}
              name: 🔐 Set Deno environment
              run: npx supabase secrets set DENO_ENV="${{ secrets.DENO_ENV }}"

            - if: ${{ env.IS_SUPABASE_CONFIGURED }}
              name: 📡 Deploy edge functions
              run: npx supabase functions deploy

            - if: ${{ env.IS_SUPABASE_CONFIGURED }}
              name: ✅ Deployment summary
              run: |
                  echo "### 🎉 Supabase Backend Deployed Successfully" >> $GITHUB_STEP_SUMMARY
                  echo "" >> $GITHUB_STEP_SUMMARY
                  echo "**Project**: \`$SUPABASE_PROJECT_ID\`" >> $GITHUB_STEP_SUMMARY
                  echo "**Commit**: \`${{ github.sha }}\`" >> $GITHUB_STEP_SUMMARY
                  echo "" >> $GITHUB_STEP_SUMMARY
                  echo "- ✅ Database migrations applied" >> $GITHUB_STEP_SUMMARY
                  echo "- ✅ Edge functions deployed (users, updatePassword)" >> $GITHUB_STEP_SUMMARY
                  echo "- ✅ Environment secrets configured" >> $GITHUB_STEP_SUMMARY
                  echo "" >> $GITHUB_STEP_SUMMARY
                  echo "🔗 [View Dashboard](https://supabase.com/dashboard/project/$SUPABASE_PROJECT_ID)" >> $GITHUB_STEP_SUMMARY

            # Validation warnings
            - if: ${{ !env.SUPABASE_ACCESS_TOKEN }}
              name: ⚠️ Missing SUPABASE_ACCESS_TOKEN
              run: echo "::warning::SUPABASE_ACCESS_TOKEN secret is not configured"

            - if: ${{ !env.SUPABASE_DB_PASSWORD }}
              name: ⚠️ Missing SUPABASE_DB_PASSWORD
              run: echo "::warning::SUPABASE_DB_PASSWORD secret is not configured"

            - if: ${{ !env.SUPABASE_PROJECT_ID }}
              name: ⚠️ Missing SUPABASE_PROJECT_ID
              run: echo "::warning::SUPABASE_PROJECT_ID secret is not configured"

            - if: ${{ !env.IS_SUPABASE_CONFIGURED }}
              name: ⚠️ Deployment skipped
              run: |
                  echo "::warning::Supabase deployment skipped - secrets not configured"
                  echo "### ⚠️ Supabase Deployment Skipped" >> $GITHUB_STEP_SUMMARY
                  echo "Required secrets are not configured. Please add:" >> $GITHUB_STEP_SUMMARY
                  echo "- \`SUPABASE_ACCESS_TOKEN\`" >> $GITHUB_STEP_SUMMARY
                  echo "- \`SUPABASE_DB_PASSWORD\`" >> $GITHUB_STEP_SUMMARY
                  echo "- \`SUPABASE_PROJECT_ID\`" >> $GITHUB_STEP_SUMMARY
