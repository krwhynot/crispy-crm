{
  "alerts": {
    "version": "2.0.0",
    "namespace": "crm.opportunities",
    "rules": [
      {
        "id": "high-value-opportunity-created",
        "name": "High Value Opportunity Created",
        "description": "Alert when a new opportunity exceeds threshold value",
        "severity": "info",
        "enabled": true,
        "conditions": {
          "query": "SELECT id, name, expected_revenue, organization_id, sales_id FROM opportunities WHERE created_at > NOW() - INTERVAL '5 minutes' AND expected_revenue > $threshold",
          "parameters": {
            "threshold": 100000
          },
          "evaluationInterval": "5m",
          "datasource": "PostgreSQL"
        },
        "notifications": [
          {
            "channel": "email",
            "recipients": ["sales-managers@atomic-crm.com"],
            "template": "New high-value opportunity: {{name}} worth {{expected_revenue | currency}}"
          },
          {
            "channel": "slack",
            "webhook": "${SLACK_WEBHOOK_URL}",
            "channel_name": "#sales-wins",
            "template": ":moneybag: New opportunity: *{{name}}* - {{expected_revenue | currency}}"
          },
          {
            "channel": "webhook",
            "url": "${OPPORTUNITY_WEBHOOK_URL}",
            "method": "POST",
            "headers": {
              "Content-Type": "application/json",
              "X-Alert-Type": "high-value-opportunity"
            }
          }
        ],
        "migration_note": "Renamed from 'high-value-deal-created', updated table and field references"
      },
      {
        "id": "opportunity-won",
        "name": "Opportunity Won",
        "description": "Alert when an opportunity is marked as won",
        "severity": "info",
        "enabled": true,
        "conditions": {
          "query": "SELECT o.id, o.name, o.expected_revenue, o.actual_close_date, org.name as organization_name, s.first_name || ' ' || s.last_name as sales_rep FROM opportunities o JOIN organizations org ON o.organization_id = org.id JOIN sales s ON o.sales_id = s.id WHERE o.status = 'won' AND o.updated_at > NOW() - INTERVAL '5 minutes'",
          "evaluationInterval": "5m",
          "datasource": "PostgreSQL"
        },
        "notifications": [
          {
            "channel": "email",
            "recipients": ["sales-team@atomic-crm.com", "executives@atomic-crm.com"],
            "template": "üéâ Opportunity WON: {{name}} at {{organization_name}} for {{expected_revenue | currency}} by {{sales_rep}}"
          },
          {
            "channel": "slack",
            "webhook": "${SLACK_WEBHOOK_URL}",
            "channel_name": "#sales-wins",
            "template": ":tada: *CLOSED WON* :tada:\n‚Ä¢ Deal: {{name}}\n‚Ä¢ Organization: {{organization_name}}\n‚Ä¢ Value: {{expected_revenue | currency}}\n‚Ä¢ Rep: {{sales_rep}}"
          }
        ],
        "migration_note": "Renamed from 'deal-won', updated to use opportunities table"
      },
      {
        "id": "stale-opportunities",
        "name": "Stale Opportunities Detection",
        "description": "Alert for opportunities with no activity in 30 days",
        "severity": "warning",
        "enabled": true,
        "conditions": {
          "query": "SELECT o.id, o.name, o.stage, o.expected_revenue, o.updated_at, s.email as sales_email FROM opportunities o JOIN sales s ON o.sales_id = s.id WHERE o.status = 'active' AND o.updated_at < NOW() - INTERVAL '30 days' AND NOT EXISTS (SELECT 1 FROM opportunity_notes n WHERE n.opportunity_id = o.id AND n.created_at > NOW() - INTERVAL '30 days')",
          "evaluationInterval": "1d",
          "datasource": "PostgreSQL"
        },
        "notifications": [
          {
            "channel": "email",
            "recipients": ["{{sales_email}}", "sales-managers@atomic-crm.com"],
            "template": "‚ö†Ô∏è Stale opportunity needs attention: {{name}} (no activity for 30+ days)"
          }
        ],
        "migration_note": "Updated from dealNotes to opportunity_notes"
      },
      {
        "id": "pipeline-velocity-drop",
        "name": "Pipeline Velocity Drop",
        "description": "Alert when new opportunity creation rate drops significantly",
        "severity": "warning",
        "enabled": true,
        "conditions": {
          "query": "WITH recent AS (SELECT COUNT(*) as count FROM opportunities WHERE created_at > NOW() - INTERVAL '7 days'), previous AS (SELECT COUNT(*) as count FROM opportunities WHERE created_at > NOW() - INTERVAL '14 days' AND created_at <= NOW() - INTERVAL '7 days') SELECT r.count as recent_count, p.count as previous_count, ((p.count - r.count)::float / NULLIF(p.count, 0)) * 100 as drop_percentage FROM recent r, previous p WHERE ((p.count - r.count)::float / NULLIF(p.count, 0)) > 0.3",
          "evaluationInterval": "1d",
          "datasource": "PostgreSQL"
        },
        "notifications": [
          {
            "channel": "email",
            "recipients": ["sales-managers@atomic-crm.com", "executives@atomic-crm.com"],
            "template": "‚ö†Ô∏è Pipeline velocity dropped {{drop_percentage}}% - only {{recent_count}} new opportunities this week vs {{previous_count}} last week"
          }
        ],
        "migration_note": "Updated to use opportunities table instead of deals"
      },
      {
        "id": "opportunity-at-risk",
        "name": "Opportunity At Risk",
        "description": "Alert for opportunities past expected close date",
        "severity": "warning",
        "enabled": true,
        "conditions": {
          "query": "SELECT o.id, o.name, o.expected_revenue, o.expected_close_date, s.email as sales_email, s.first_name as sales_name FROM opportunities o JOIN sales s ON o.sales_id = s.id WHERE o.status = 'active' AND o.expected_close_date < CURRENT_DATE AND o.expected_close_date > CURRENT_DATE - INTERVAL '7 days'",
          "evaluationInterval": "1d",
          "datasource": "PostgreSQL"
        },
        "notifications": [
          {
            "channel": "email",
            "recipients": ["{{sales_email}}"],
            "cc": ["sales-managers@atomic-crm.com"],
            "template": "‚è∞ Opportunity past close date: {{name}} was expected to close on {{expected_close_date}}"
          }
        ],
        "migration_note": "New alert for opportunities, using expected_close_date field"
      },
      {
        "id": "low-probability-high-value",
        "name": "Low Probability High Value Alert",
        "description": "Alert for high-value opportunities with low win probability",
        "severity": "info",
        "enabled": true,
        "conditions": {
          "query": "SELECT o.id, o.name, o.expected_revenue, o.probability, org.name as organization_name, s.email as sales_email FROM opportunities o JOIN organizations org ON o.organization_id = org.id JOIN sales s ON o.sales_id = s.id WHERE o.status = 'active' AND o.expected_revenue > 50000 AND o.probability < 30 AND o.updated_at > NOW() - INTERVAL '24 hours'",
          "evaluationInterval": "1d",
          "datasource": "PostgreSQL"
        },
        "notifications": [
          {
            "channel": "email",
            "recipients": ["sales-managers@atomic-crm.com"],
            "template": "üìä High-value opportunity needs support: {{name}} at {{organization_name}} ({{expected_revenue | currency}}) has only {{probability}}% probability"
          }
        ],
        "migration_note": "New alert leveraging probability field in opportunities"
      },
      {
        "id": "quota-achievement-tracker",
        "name": "Quota Achievement Tracker",
        "description": "Weekly update on quota achievement by sales rep",
        "severity": "info",
        "enabled": true,
        "schedule": "0 9 * * MON",
        "conditions": {
          "query": "WITH quota_data AS (SELECT s.id, s.first_name || ' ' || s.last_name as sales_rep, s.email, COALESCE(SUM(CASE WHEN o.status = 'won' THEN o.expected_revenue END), 0) as closed_revenue, COALESCE(SUM(CASE WHEN o.status = 'active' THEN o.expected_revenue * o.probability / 100 END), 0) as weighted_pipeline, s.monthly_quota FROM sales s LEFT JOIN opportunities o ON s.id = o.sales_id AND o.created_at >= DATE_TRUNC('month', CURRENT_DATE) GROUP BY s.id, s.first_name, s.last_name, s.email, s.monthly_quota) SELECT *, (closed_revenue / NULLIF(monthly_quota, 0)) * 100 as quota_percentage FROM quota_data WHERE monthly_quota > 0",
          "datasource": "PostgreSQL"
        },
        "notifications": [
          {
            "channel": "email",
            "recipients": ["{{email}}", "sales-managers@atomic-crm.com"],
            "template": "üìà Weekly Quota Update for {{sales_rep}}:\n‚Ä¢ Closed: {{closed_revenue | currency}} ({{quota_percentage}}% of quota)\n‚Ä¢ Weighted Pipeline: {{weighted_pipeline | currency}}\n‚Ä¢ Monthly Quota: {{monthly_quota | currency}}"
          }
        ],
        "migration_note": "Updated to use opportunities table and new probability field"
      },
      {
        "id": "opportunity-stage-regression",
        "name": "Opportunity Stage Regression",
        "description": "Alert when opportunity moves backward in pipeline",
        "severity": "warning",
        "enabled": true,
        "conditions": {
          "query": "WITH stage_values AS (SELECT 'lead' as stage, 1 as value UNION SELECT 'qualification', 2 UNION SELECT 'proposal', 3 UNION SELECT 'negotiation', 4 UNION SELECT 'closed', 5) SELECT o.id, o.name, o.stage as current_stage, al.previous_stage, s.email as sales_email FROM opportunities o JOIN activity_log al ON al.resource_id = o.id AND al.resource = 'opportunities' AND al.action = 'update' AND al.created_at > NOW() - INTERVAL '1 hour' JOIN stage_values sv1 ON sv1.stage = o.stage JOIN stage_values sv2 ON sv2.stage = al.previous_stage JOIN sales s ON o.sales_id = s.id WHERE sv1.value < sv2.value",
          "evaluationInterval": "1h",
          "datasource": "PostgreSQL"
        },
        "notifications": [
          {
            "channel": "email",
            "recipients": ["{{sales_email}}", "sales-managers@atomic-crm.com"],
            "template": "‚ö†Ô∏è Opportunity moved backward: {{name}} regressed from {{previous_stage}} to {{current_stage}}"
          }
        ],
        "migration_note": "New alert for tracking pipeline regression in opportunities"
      }
    ],
    "notification_channels": {
      "email": {
        "type": "smtp",
        "settings": {
          "host": "${SMTP_HOST}",
          "port": "${SMTP_PORT}",
          "from": "alerts@atomic-crm.com",
          "username": "${SMTP_USERNAME}",
          "password": "${SMTP_PASSWORD}",
          "tls": true
        }
      },
      "slack": {
        "type": "webhook",
        "settings": {
          "webhook_url": "${SLACK_WEBHOOK_URL}",
          "default_channel": "#sales-alerts",
          "username": "CRM Alert Bot",
          "icon_emoji": ":robot_face:"
        }
      },
      "webhook": {
        "type": "http",
        "settings": {
          "timeout": 5000,
          "retry_count": 3,
          "retry_delay": 1000,
          "headers": {
            "X-Source": "atomic-crm-alerts",
            "X-Version": "2.0.0"
          }
        }
      },
      "pagerduty": {
        "type": "pagerduty",
        "settings": {
          "integration_key": "${PAGERDUTY_INTEGRATION_KEY}",
          "api_url": "https://events.pagerduty.com/v2/enqueue"
        }
      }
    },
    "templates": {
      "currency": {
        "filter": "formatCurrency",
        "options": {
          "symbol": "$",
          "decimals": 0
        }
      }
    },
    "migration_summary": {
      "previous_version": "1.0.0",
      "migrated_alerts": [
        "high-value-deal-created ‚Üí high-value-opportunity-created",
        "deal-won ‚Üí opportunity-won",
        "stale-deals ‚Üí stale-opportunities",
        "pipeline-velocity-drop (updated queries)"
      ],
      "new_alerts": [
        "opportunity-at-risk",
        "low-probability-high-value",
        "opportunity-stage-regression"
      ],
      "deprecated_alerts": [
        "deal-contact-added",
        "deal-amount-changed"
      ],
      "table_changes": {
        "deals": "opportunities",
        "dealNotes": "opportunity_notes",
        "deal_contacts": "opportunity_participants"
      },
      "field_changes": {
        "amount": "expected_revenue",
        "close_date": "expected_close_date",
        "contact_id": "participants array"
      }
    }
  }
}