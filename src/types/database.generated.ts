/**
 * Database Types - AUTO-GENERATED
 *
 * This file is automatically generated from the database schema.
 * DO NOT EDIT THIS FILE DIRECTLY!
 *
 * To regenerate: npm run generate:types
 * Generated at: 2025-01-21T20:00:00.000Z
 */

export type Json =
  | string
  | number
  | boolean
  | null
  | { [key: string]: Json | undefined }
  | Json[]

export type Database = {
  public: {
    Tables: {
      contact_organizations: {
        Row: {
          contact_id: string
          organization_id: string
          title: string | null
        }
        Insert: {
          contact_id: string
          organization_id: string
          title?: string | null
        }
        Update: {
          contact_id?: string
          organization_id?: string
          title?: string | null
        }
        Relationships: [
          {
            foreignKeyName: "contact_organizations_contact_id_fkey"
            columns: ["contact_id"]
            isOneToOne: false
            referencedRelation: "contacts"
            referencedColumns: ["id"]
          },
          {
            foreignKeyName: "contact_organizations_organization_id_fkey"
            columns: ["organization_id"]
            isOneToOne: false
            referencedRelation: "organizations"
            referencedColumns: ["id"]
          },
        ]
      }
      contact_preferred_principals: {
        Row: {
          advocacy_notes: string | null
          advocacy_strength: number | null
          contact_id: string
          created_at: string | null
          created_by: string | null
          deleted_at: string | null
          id: string
          principal_organization_id: string
          relationship_type: string | null
          updated_at: string | null
          updated_by: string | null
        }
        Insert: {
          advocacy_notes?: string | null
          advocacy_strength?: number | null
          contact_id: string
          created_at?: string | null
          created_by?: string | null
          deleted_at?: string | null
          id?: string
          principal_organization_id: string
          relationship_type?: string | null
          updated_at?: string | null
          updated_by?: string | null
        }
        Update: {
          advocacy_notes?: string | null
          advocacy_strength?: number | null
          contact_id?: string
          created_at?: string | null
          created_by?: string | null
          deleted_at?: string | null
          id?: string
          principal_organization_id?: string
          relationship_type?: string | null
          updated_at?: string | null
          updated_by?: string | null
        }
        Relationships: [
          {
            foreignKeyName: "contact_preferred_principals_contact_id_fkey"
            columns: ["contact_id"]
            isOneToOne: false
            referencedRelation: "contacts"
            referencedColumns: ["id"]
          },
          {
            foreignKeyName: "contact_preferred_principals_created_by_fkey"
            columns: ["created_by"]
            isOneToOne: false
            referencedRelation: "users"
            referencedColumns: ["id"]
          },
          {
            foreignKeyName: "contact_preferred_principals_principal_id_fkey"
            columns: ["principal_organization_id"]
            isOneToOne: false
            referencedRelation: "organizations"
            referencedColumns: ["id"]
          },
          {
            foreignKeyName: "contact_preferred_principals_updated_by_fkey"
            columns: ["updated_by"]
            isOneToOne: false
            referencedRelation: "users"
            referencedColumns: ["id"]
          },
        ]
      }
      contactNotes: {
        Row: {
          contact_id: string | null
          created_at: string | null
          date: string | null
          id: string
          sales_id: string | null
          text: string
          updated_at: string | null
        }
        Insert: {
          contact_id?: string | null
          created_at?: string | null
          date?: string | null
          id?: string
          sales_id?: string | null
          text: string
          updated_at?: string | null
        }
        Update: {
          contact_id?: string | null
          created_at?: string | null
          date?: string | null
          id?: string
          sales_id?: string | null
          text?: string
          updated_at?: string | null
        }
        Relationships: [
          {
            foreignKeyName: "contactNotes_contact_id_fkey"
            columns: ["contact_id"]
            isOneToOne: false
            referencedRelation: "contacts"
            referencedColumns: ["id"]
          },
          {
            foreignKeyName: "contactNotes_sales_id_fkey"
            columns: ["sales_id"]
            isOneToOne: false
            referencedRelation: "sales"
            referencedColumns: ["id"]
          },
        ]
      }
      contacts: {
        Row: {
          avatar: Json | null
          background: string | null
          company_id: string | null
          created_at: string | null
          created_by: string
          decision_authority: string
          deleted_at: string | null
          department: string | null
          email: string | null
          email_jsonb: Json | null
          first_name: string
          first_seen: string | null
          gender: string | null
          has_newsletter: boolean | null
          id: string
          is_primary_contact: boolean | null
          last_name: string
          linkedin_url: string | null
          mobile_phone: string | null
          notes: string | null
          organization_id: string
          phone: string | null
          phone_number: string | null
          phone_number_jsonb: Json | null
          purchase_influence: string
          role: Database["public"]["Enums"]["contact_role"] | null
          sales_id: string | null
          search_tsv: unknown | null
          tags: Json | null
          title: string | null
          updated_at: string | null
          updated_by: string | null
        }
        Insert: {
          avatar?: Json | null
          background?: string | null
          company_id?: string | null
          created_at?: string | null
          created_by: string
          decision_authority?: string
          deleted_at?: string | null
          department?: string | null
          email?: string | null
          email_jsonb?: Json | null
          first_name: string
          first_seen?: string | null
          gender?: string | null
          has_newsletter?: boolean | null
          id?: string
          is_primary_contact?: boolean | null
          last_name: string
          linkedin_url?: string | null
          mobile_phone?: string | null
          notes?: string | null
          organization_id: string
          phone?: string | null
          phone_number?: string | null
          phone_number_jsonb?: Json | null
          purchase_influence?: string
          role?: Database["public"]["Enums"]["contact_role"] | null
          sales_id?: string | null
          search_tsv?: unknown | null
          tags?: Json | null
          title?: string | null
          updated_at?: string | null
          updated_by?: string | null
        }
        Update: {
          avatar?: Json | null
          background?: string | null
          company_id?: string | null
          created_at?: string | null
          created_by?: string
          decision_authority?: string
          deleted_at?: string | null
          department?: string | null
          email?: string | null
          email_jsonb?: Json | null
          first_name?: string
          first_seen?: string | null
          gender?: string | null
          has_newsletter?: boolean | null
          id?: string
          is_primary_contact?: boolean | null
          last_name?: string
          linkedin_url?: string | null
          mobile_phone?: string | null
          notes?: string | null
          organization_id?: string
          phone?: string | null
          phone_number?: string | null
          phone_number_jsonb?: Json | null
          purchase_influence?: string
          role?: Database["public"]["Enums"]["contact_role"] | null
          sales_id?: string | null
          search_tsv?: unknown | null
          tags?: Json | null
          title?: string | null
          updated_at?: string | null
          updated_by?: string | null
        }
        Relationships: [
          {
            foreignKeyName: "contacts_company_id_fkey"
            columns: ["company_id"]
            isOneToOne: false
            referencedRelation: "organizations"
            referencedColumns: ["id"]
          },
          {
            foreignKeyName: "contacts_created_by_fkey"
            columns: ["created_by"]
            isOneToOne: false
            referencedRelation: "users"
            referencedColumns: ["id"]
          },
          {
            foreignKeyName: "contacts_organization_id_fkey"
            columns: ["organization_id"]
            isOneToOne: false
            referencedRelation: "organizations"
            referencedColumns: ["id"]
          },
          {
            foreignKeyName: "contacts_sales_id_fkey"
            columns: ["sales_id"]
            isOneToOne: false
            referencedRelation: "sales"
            referencedColumns: ["id"]
          },
          {
            foreignKeyName: "contacts_updated_by_fkey"
            columns: ["updated_by"]
            isOneToOne: false
            referencedRelation: "users"
            referencedColumns: ["id"]
          },
        ]
      }
      init_state: {
        Row: {
          created_at: string | null
          id: string
          initialized_at: string | null
          initialized_by: string | null
          is_initialized: boolean | null
          updated_at: string | null
        }
        Insert: {
          created_at?: string | null
          id?: string
          initialized_at?: string | null
          initialized_by?: string | null
          is_initialized?: boolean | null
          updated_at?: string | null
        }
        Update: {
          created_at?: string | null
          id?: string
          initialized_at?: string | null
          initialized_by?: string | null
          is_initialized?: boolean | null
          updated_at?: string | null
        }
        Relationships: [
          {
            foreignKeyName: "init_state_initialized_by_fkey"
            columns: ["initialized_by"]
            isOneToOne: false
            referencedRelation: "users"
            referencedColumns: ["id"]
          },
        ]
      }
      interaction_type_lu: {
        Row: {
          code: string
          deprecated_notice: string | null
          description: string | null
          display_name: string
          enum_code: string | null
          is_active: boolean
          sort_order: number
        }
        Insert: {
          code: string
          deprecated_notice?: string | null
          description?: string | null
          display_name: string
          enum_code?: string | null
          is_active?: boolean
          sort_order: number
        }
        Update: {
          code?: string
          deprecated_notice?: string | null
          description?: string | null
          display_name?: string
          enum_code?: string | null
          is_active?: boolean
          sort_order?: number
        }
        Relationships: []
      }
      interactions: {
        Row: {
          attachments: string[] | null
          contact_id: string | null
          created_at: string | null
          created_by: string
          deleted_at: string | null
          description: string | null
          duration_minutes: number | null
          follow_up_date: string | null
          follow_up_notes: string | null
          follow_up_required: boolean | null
          id: string
          interaction_date: string
          opportunity_id: string
          organization_id: string | null
          outcome: string | null
          subject: string
          type: Database["public"]["Enums"]["interaction_type"]
          updated_at: string | null
          updated_by: string | null
        }
        Insert: {
          attachments?: string[] | null
          contact_id?: string | null
          created_at?: string | null
          created_by: string
          deleted_at?: string | null
          description?: string | null
          duration_minutes?: number | null
          follow_up_date?: string | null
          follow_up_notes?: string | null
          follow_up_required?: boolean | null
          id?: string
          interaction_date?: string
          opportunity_id: string
          organization_id?: string | null
          outcome?: string | null
          subject: string
          type: Database["public"]["Enums"]["interaction_type"]
          updated_at?: string | null
          updated_by?: string | null
        }
        Update: {
          attachments?: string[] | null
          contact_id?: string | null
          created_at?: string | null
          created_by?: string
          deleted_at?: string | null
          description?: string | null
          duration_minutes?: number | null
          follow_up_date?: string | null
          follow_up_notes?: string | null
          follow_up_required?: boolean | null
          id?: string
          interaction_date?: string
          opportunity_id?: string
          organization_id?: string | null
          outcome?: string | null
          subject?: string
          type?: Database["public"]["Enums"]["interaction_type"]
          updated_at?: string | null
          updated_by?: string | null
        }
        Relationships: [
          {
            foreignKeyName: "interactions_contact_id_fkey"
            columns: ["contact_id"]
            isOneToOne: false
            referencedRelation: "contacts"
            referencedColumns: ["id"]
          },
          {
            foreignKeyName: "interactions_created_by_fkey"
            columns: ["created_by"]
            isOneToOne: false
            referencedRelation: "users"
            referencedColumns: ["id"]
          },
          {
            foreignKeyName: "interactions_opportunity_id_fkey"
            columns: ["opportunity_id"]
            isOneToOne: false
            referencedRelation: "opportunities"
            referencedColumns: ["id"]
          },
          {
            foreignKeyName: "interactions_organization_id_fkey"
            columns: ["organization_id"]
            isOneToOne: false
            referencedRelation: "organizations"
            referencedColumns: ["id"]
          },
          {
            foreignKeyName: "interactions_updated_by_fkey"
            columns: ["updated_by"]
            isOneToOne: false
            referencedRelation: "users"
            referencedColumns: ["id"]
          },
        ]
      }
      layout_templates: {
        Row: {
          category: string
          created_at: string | null
          created_by: string
          description: string | null
          entity_type: string
          id: string
          is_default: boolean | null
          is_public: boolean | null
          layout_config: Json
          name: string
          organization_id: string | null
          rating_average: number | null
          rating_count: number | null
          updated_at: string | null
          updated_by: string | null
          usage_count: number | null
          version: string
          visibility: string
        }
        Insert: {
          category?: string
          created_at?: string | null
          created_by: string
          description?: string | null
          entity_type: string
          id?: string
          is_default?: boolean | null
          is_public?: boolean | null
          layout_config: Json
          name: string
          organization_id?: string | null
          rating_average?: number | null
          rating_count?: number | null
          updated_at?: string | null
          updated_by?: string | null
          usage_count?: number | null
          version?: string
          visibility?: string
        }
        Update: {
          category?: string
          created_at?: string | null
          created_by?: string
          description?: string | null
          entity_type?: string
          id?: string
          is_default?: boolean | null
          is_public?: boolean | null
          layout_config?: Json
          name?: string
          organization_id?: string | null
          rating_average?: number | null
          rating_count?: number | null
          updated_at?: string | null
          updated_by?: string | null
          usage_count?: number | null
          version?: string
          visibility?: string
        }
        Relationships: [
          {
            foreignKeyName: "layout_templates_created_by_fkey"
            columns: ["created_by"]
            isOneToOne: false
            referencedRelation: "users"
            referencedColumns: ["id"]
          },
          {
            foreignKeyName: "layout_templates_updated_by_fkey"
            columns: ["updated_by"]
            isOneToOne: false
            referencedRelation: "users"
            referencedColumns: ["id"]
          },
        ]
      }
      loss_reason_lu: {
        Row: {
          code: string
          description: string | null
          display_name: string
          is_active: boolean
          sort_order: number
        }
        Insert: {
          code: string
          description?: string | null
          display_name: string
          is_active?: boolean
          sort_order: number
        }
        Update: {
          code?: string
          description?: string | null
          display_name?: string
          is_active?: boolean
          sort_order?: number
        }
        Relationships: []
      }
      migration_control: {
        Row: {
          completed_at: string | null
          error_message: string | null
          phase_name: string
          phase_number: number
          rollback_sql: string | null
          started_at: string | null
          status: string
        }
        Insert: {
          completed_at?: string | null
          error_message?: string | null
          phase_name: string
          phase_number: number
          rollback_sql?: string | null
          started_at?: string | null
          status?: string
        }
        Update: {
          completed_at?: string | null
          error_message?: string | null
          phase_name?: string
          phase_number?: number
          rollback_sql?: string | null
          started_at?: string | null
          status?: string
        }
        Relationships: []
      }
      opportunities: {
        Row: {
          actual_close_date: string | null
          amount: number | null
          archived_at: string | null
          auto_generated_name: boolean | null
          category: string | null
          company_id: string | null
          competition: string | null
          contact_id: string | null
          contact_ids: string[] | null
          created_at: string | null
          created_by: string
          decision_criteria: string | null
          deleted_at: string | null
          description: string | null
          distributor_organization_id: string | null
          estimated_close_date: string | null
          estimated_value: number | null
          expected_close_date: string | null
          expected_closing_date: string | null
          founding_interaction_id: string | null
          id: string
          index: number | null
          last_sync_date: string | null
          name: string
          next_action: string | null
          next_action_date: string | null
          notes: string | null
          opportunity_context: string | null
          organization_id: string
          pipeline: string | null
          principal_organization_id: string | null
          priority: Database["public"]["Enums"]["priority_level"] | null
          probability: number | null
          search_tsv: unknown | null
          stage: Database["public"]["Enums"]["opportunity_stage"]
          stage_manual: boolean
          status: Database["public"]["Enums"]["opportunity_status"]
          status_manual: boolean
          updated_at: string | null
          updated_by: string | null
        }
        Insert: {
          actual_close_date?: string | null
          amount?: number | null
          archived_at?: string | null
          auto_generated_name?: boolean | null
          category?: string | null
          company_id?: string | null
          competition?: string | null
          contact_id?: string | null
          contact_ids?: string[] | null
          created_at?: string | null
          created_by: string
          decision_criteria?: string | null
          deleted_at?: string | null
          description?: string | null
          distributor_organization_id?: string | null
          estimated_close_date?: string | null
          estimated_value?: number | null
          expected_close_date?: string | null
          expected_closing_date?: string | null
          founding_interaction_id?: string | null
          id?: string
          index?: number | null
          last_sync_date?: string | null
          name: string
          next_action?: string | null
          next_action_date?: string | null
          notes?: string | null
          opportunity_context?: string | null
          organization_id: string
          pipeline?: string | null
          principal_organization_id?: string | null
          priority?: Database["public"]["Enums"]["priority_level"] | null
          probability?: number | null
          search_tsv?: unknown | null
          stage?: Database["public"]["Enums"]["opportunity_stage"]
          stage_manual?: boolean
          status?: Database["public"]["Enums"]["opportunity_status"]
          status_manual?: boolean
          updated_at?: string | null
          updated_by?: string | null
        }
        Update: {
          actual_close_date?: string | null
          amount?: number | null
          archived_at?: string | null
          auto_generated_name?: boolean | null
          category?: string | null
          company_id?: string | null
          competition?: string | null
          contact_id?: string | null
          contact_ids?: string[] | null
          created_at?: string | null
          created_by?: string
          decision_criteria?: string | null
          deleted_at?: string | null
          description?: string | null
          distributor_organization_id?: string | null
          estimated_close_date?: string | null
          estimated_value?: number | null
          expected_close_date?: string | null
          expected_closing_date?: string | null
          founding_interaction_id?: string | null
          id?: string
          index?: number | null
          last_sync_date?: string | null
          name?: string
          next_action?: string | null
          next_action_date?: string | null
          notes?: string | null
          opportunity_context?: string | null
          organization_id?: string
          pipeline?: string | null
          principal_organization_id?: string | null
          priority?: Database["public"]["Enums"]["priority_level"] | null
          probability?: number | null
          search_tsv?: unknown | null
          stage?: Database["public"]["Enums"]["opportunity_stage"]
          stage_manual?: boolean
          status?: Database["public"]["Enums"]["opportunity_status"]
          status_manual?: boolean
          updated_at?: string | null
          updated_by?: string | null
        }
        Relationships: [
          {
            foreignKeyName: "opportunities_company_id_fkey"
            columns: ["company_id"]
            isOneToOne: false
            referencedRelation: "organizations"
            referencedColumns: ["id"]
          },
          {
            foreignKeyName: "opportunities_contact_id_fkey"
            columns: ["contact_id"]
            isOneToOne: false
            referencedRelation: "contacts"
            referencedColumns: ["id"]
          },
          {
            foreignKeyName: "opportunities_created_by_fkey"
            columns: ["created_by"]
            isOneToOne: false
            referencedRelation: "users"
            referencedColumns: ["id"]
          },
          {
            foreignKeyName: "opportunities_distributor_organization_id_fkey"
            columns: ["distributor_organization_id"]
            isOneToOne: false
            referencedRelation: "organizations"
            referencedColumns: ["id"]
          },
          {
            foreignKeyName: "opportunities_founding_interaction_id_fkey"
            columns: ["founding_interaction_id"]
            isOneToOne: false
            referencedRelation: "interactions"
            referencedColumns: ["id"]
          },
          {
            foreignKeyName: "opportunities_organization_id_fkey"
            columns: ["organization_id"]
            isOneToOne: false
            referencedRelation: "organizations"
            referencedColumns: ["id"]
          },
          {
            foreignKeyName: "opportunities_principal_organization_id_fkey"
            columns: ["principal_organization_id"]
            isOneToOne: false
            referencedRelation: "organizations"
            referencedColumns: ["id"]
          },
          {
            foreignKeyName: "opportunities_updated_by_fkey"
            columns: ["updated_by"]
            isOneToOne: false
            referencedRelation: "users"
            referencedColumns: ["id"]
          },
        ]
      }
      opportunityNotes: {
        Row: {
          created_at: string | null
          date: string | null
          id: string
          opportunity_id: string | null
          sales_id: string | null
          text: string
          updated_at: string | null
        }
        Insert: {
          created_at?: string | null
          date?: string | null
          id?: string
          opportunity_id?: string | null
          sales_id?: string | null
          text: string
          updated_at?: string | null
        }
        Update: {
          created_at?: string | null
          date?: string | null
          id?: string
          opportunity_id?: string | null
          sales_id?: string | null
          text?: string
          updated_at?: string | null
        }
        Relationships: [
          {
            foreignKeyName: "opportunityNotes_opportunity_id_fkey"
            columns: ["opportunity_id"]
            isOneToOne: false
            referencedRelation: "opportunities"
            referencedColumns: ["id"]
          },
          {
            foreignKeyName: "opportunityNotes_sales_id_fkey"
            columns: ["sales_id"]
            isOneToOne: false
            referencedRelation: "sales"
            referencedColumns: ["id"]
          },
        ]
      }
      opportunity_participants: {
        Row: {
          commission_rate: number | null
          created_at: string | null
          created_by: string | null
          id: string
          is_primary: boolean | null
          notes: string | null
          opportunity_id: string
          organization_id: string
          role: string
          territory: string | null
          updated_at: string | null
          updated_by: string | null
        }
        Insert: {
          commission_rate?: number | null
          created_at?: string | null
          created_by?: string | null
          id?: string
          is_primary?: boolean | null
          notes?: string | null
          opportunity_id: string
          organization_id: string
          role: string
          territory?: string | null
          updated_at?: string | null
          updated_by?: string | null
        }
        Update: {
          commission_rate?: number | null
          created_at?: string | null
          created_by?: string | null
          id?: string
          is_primary?: boolean | null
          notes?: string | null
          opportunity_id?: string
          organization_id?: string
          role?: string
          territory?: string | null
          updated_at?: string | null
          updated_by?: string | null
        }
        Relationships: [
          {
            foreignKeyName: "opportunity_participants_opportunity_id_fkey"
            columns: ["opportunity_id"]
            isOneToOne: false
            referencedRelation: "opportunities"
            referencedColumns: ["id"]
          },
          {
            foreignKeyName: "opportunity_participants_organization_id_fkey"
            columns: ["organization_id"]
            isOneToOne: false
            referencedRelation: "organizations"
            referencedColumns: ["id"]
          },
        ]
      }
      opportunity_products: {
        Row: {
          created_at: string | null
          extended_price: number | null
          id: string
          notes: string | null
          opportunity_id: string
          product_id: string
          quantity: number
          unit_price: number | null
          updated_at: string | null
        }
        Insert: {
          created_at?: string | null
          extended_price?: number | null
          id?: string
          notes?: string | null
          opportunity_id: string
          product_id: string
          quantity?: number
          unit_price?: number | null
          updated_at?: string | null
        }
        Update: {
          created_at?: string | null
          extended_price?: number | null
          id?: string
          notes?: string | null
          opportunity_id?: string
          product_id?: string
          quantity?: number
          unit_price?: number | null
          updated_at?: string | null
        }
        Relationships: [
          {
            foreignKeyName: "opportunity_products_opportunity_id_fkey"
            columns: ["opportunity_id"]
            isOneToOne: false
            referencedRelation: "opportunities"
            referencedColumns: ["id"]
          },
          {
            foreignKeyName: "opportunity_products_product_id_fkey"
            columns: ["product_id"]
            isOneToOne: false
            referencedRelation: "products"
            referencedColumns: ["id"]
          },
        ]
      }
      organization_roles: {
        Row: {
          created_at: string
          organization_id: string
          role: string
        }
        Insert: {
          created_at?: string
          organization_id: string
          role: string
        }
        Update: {
          created_at?: string
          organization_id?: string
          role?: string
        }
        Relationships: [
          {
            foreignKeyName: "organization_roles_organization_id_fkey"
            columns: ["organization_id"]
            isOneToOne: false
            referencedRelation: "organizations"
            referencedColumns: ["id"]
          },
        ]
      }
      organizations: {
        Row: {
          address_line_1: string | null
          address_line_2: string | null
          city: string | null
          country: string | null
          created_at: string | null
          created_by: string
          deleted_at: string | null
          description: string | null
          email: string | null
          id: string
          import_notes: string | null
          import_session_id: string | null
          industry: string | null
          is_active: boolean | null
          is_distributor: boolean | null
          is_principal: boolean | null
          name: string
          name_normalized: string | null
          notes: string | null
          parent_organization_id: string | null
          phone: string | null
          postal_code: string | null
          primary_manager_id: string | null
          primary_manager_name: string | null
          priority: string
          search_tsv: unknown | null
          secondary_manager_id: string | null
          secondary_manager_name: string | null
          segment: string
          state_province: string | null
          type: Database["public"]["Enums"]["organization_type"]
          updated_at: string | null
          updated_by: string | null
          website: string | null
        }
        Insert: {
          address_line_1?: string | null
          address_line_2?: string | null
          city?: string | null
          country?: string | null
          created_at?: string | null
          created_by: string
          deleted_at?: string | null
          description?: string | null
          email?: string | null
          id?: string
          import_notes?: string | null
          import_session_id?: string | null
          industry?: string | null
          is_active?: boolean | null
          is_distributor?: boolean | null
          is_principal?: boolean | null
          name: string
          name_normalized?: string | null
          notes?: string | null
          parent_organization_id?: string | null
          phone?: string | null
          postal_code?: string | null
          primary_manager_id?: string | null
          primary_manager_name?: string | null
          priority?: string
          search_tsv?: unknown | null
          secondary_manager_id?: string | null
          secondary_manager_name?: string | null
          segment?: string
          state_province?: string | null
          type: Database["public"]["Enums"]["organization_type"]
          updated_at?: string | null
          updated_by?: string | null
          website?: string | null
        }
        Update: {
          address_line_1?: string | null
          address_line_2?: string | null
          city?: string | null
          country?: string | null
          created_at?: string | null
          created_by?: string
          deleted_at?: string | null
          description?: string | null
          email?: string | null
          id?: string
          import_notes?: string | null
          import_session_id?: string | null
          industry?: string | null
          is_active?: boolean | null
          is_distributor?: boolean | null
          is_principal?: boolean | null
          name?: string
          name_normalized?: string | null
          notes?: string | null
          parent_organization_id?: string | null
          phone?: string | null
          postal_code?: string | null
          primary_manager_id?: string | null
          primary_manager_name?: string | null
          priority?: string
          search_tsv?: unknown | null
          secondary_manager_id?: string | null
          secondary_manager_name?: string | null
          segment?: string
          state_province?: string | null
          type?: Database["public"]["Enums"]["organization_type"]
          updated_at?: string | null
          updated_by?: string | null
          website?: string | null
        }
        Relationships: [
          {
            foreignKeyName: "fk_organizations_primary_manager"
            columns: ["primary_manager_id"]
            isOneToOne: false
            referencedRelation: "contacts"
            referencedColumns: ["id"]
          },
          {
            foreignKeyName: "fk_organizations_secondary_manager"
            columns: ["secondary_manager_id"]
            isOneToOne: false
            referencedRelation: "contacts"
            referencedColumns: ["id"]
          },
          {
            foreignKeyName: "organizations_created_by_fkey"
            columns: ["created_by"]
            isOneToOne: false
            referencedRelation: "users"
            referencedColumns: ["id"]
          },
          {
            foreignKeyName: "organizations_parent_organization_id_fkey"
            columns: ["parent_organization_id"]
            isOneToOne: false
            referencedRelation: "organizations"
            referencedColumns: ["id"]
          },
          {
            foreignKeyName: "organizations_updated_by_fkey"
            columns: ["updated_by"]
            isOneToOne: false
            referencedRelation: "users"
            referencedColumns: ["id"]
          },
        ]
      }
      principal_distributor_relationships: {
        Row: {
          commission_rate: number | null
          contract_end_date: string | null
          contract_start_date: string | null
          created_at: string | null
          distributor_id: string
          id: string
          is_active: boolean | null
          principal_id: string
          terms: string | null
          territory: string | null
          updated_at: string | null
        }
        Insert: {
          commission_rate?: number | null
          contract_end_date?: string | null
          contract_start_date?: string | null
          created_at?: string | null
          distributor_id: string
          id?: string
          is_active?: boolean | null
          principal_id: string
          terms?: string | null
          territory?: string | null
          updated_at?: string | null
        }
        Update: {
          commission_rate?: number | null
          contract_end_date?: string | null
          contract_start_date?: string | null
          created_at?: string | null
          distributor_id?: string
          id?: string
          is_active?: boolean | null
          principal_id?: string
          terms?: string | null
          territory?: string | null
          updated_at?: string | null
        }
        Relationships: [
          {
            foreignKeyName: "principal_distributor_relationships_distributor_id_fkey"
            columns: ["distributor_id"]
            isOneToOne: false
            referencedRelation: "organizations"
            referencedColumns: ["id"]
          },
          {
            foreignKeyName: "principal_distributor_relationships_principal_id_fkey"
            columns: ["principal_id"]
            isOneToOne: false
            referencedRelation: "organizations"
            referencedColumns: ["id"]
          },
        ]
      }
      products: {
        Row: {
          category: Database["public"]["Enums"]["product_category"]
          created_at: string | null
          created_by: string
          deleted_at: string | null
          description: string | null
          id: string
          list_price: number | null
          min_order_quantity: number | null
          name: string
          principal_id: string
          season_end: number | null
          season_start: number | null
          shelf_life_days: number | null
          sku: string | null
          specifications: string | null
          storage_requirements: string | null
          unit_cost: number | null
          unit_of_measure: string | null
          updated_at: string | null
          updated_by: string | null
        }
        Insert: {
          category: Database["public"]["Enums"]["product_category"]
          created_at?: string | null
          created_by: string
          deleted_at?: string | null
          description?: string | null
          id?: string
          list_price?: number | null
          min_order_quantity?: number | null
          name: string
          principal_id: string
          season_end?: number | null
          season_start?: number | null
          shelf_life_days?: number | null
          sku?: string | null
          specifications?: string | null
          storage_requirements?: string | null
          unit_cost?: number | null
          unit_of_measure?: string | null
          updated_at?: string | null
          updated_by?: string | null
        }
        Update: {
          category?: Database["public"]["Enums"]["product_category"]
          created_at?: string | null
          created_by?: string
          deleted_at?: string | null
          description?: string | null
          id?: string
          list_price?: number | null
          min_order_quantity?: number | null
          name?: string
          principal_id?: string
          season_end?: number | null
          season_start?: number | null
          shelf_life_days?: number | null
          sku?: string | null
          specifications?: string | null
          storage_requirements?: string | null
          unit_cost?: number | null
          unit_of_measure?: string | null
          updated_at?: string | null
          updated_by?: string | null
        }
        Relationships: [
          {
            foreignKeyName: "products_created_by_fkey"
            columns: ["created_by"]
            isOneToOne: false
            referencedRelation: "users"
            referencedColumns: ["id"]
          },
          {
            foreignKeyName: "products_principal_id_fkey"
            columns: ["principal_id"]
            isOneToOne: false
            referencedRelation: "organizations"
            referencedColumns: ["id"]
          },
          {
            foreignKeyName: "products_updated_by_fkey"
            columns: ["updated_by"]
            isOneToOne: false
            referencedRelation: "users"
            referencedColumns: ["id"]
          },
        ]
      }
      sales: {
        Row: {
          administrator: boolean | null
          avatar: Json | null
          created_at: string | null
          disabled: boolean | null
          email: string
          first_name: string
          id: string
          last_name: string
          updated_at: string | null
          user_id: string | null
        }
        Insert: {
          administrator?: boolean | null
          avatar?: Json | null
          created_at?: string | null
          disabled?: boolean | null
          email: string
          first_name: string
          id?: string
          last_name: string
          updated_at?: string | null
          user_id?: string | null
        }
        Update: {
          administrator?: boolean | null
          avatar?: Json | null
          created_at?: string | null
          disabled?: boolean | null
          email?: string
          first_name?: string
          id?: string
          last_name?: string
          updated_at?: string | null
          user_id?: string | null
        }
        Relationships: [
          {
            foreignKeyName: "sales_user_id_fkey"
            columns: ["user_id"]
            isOneToOne: false
            referencedRelation: "users"
            referencedColumns: ["id"]
          },
        ]
      }
      source_lu: {
        Row: {
          code: string
          description: string | null
          display_name: string
          is_active: boolean
          sort_order: number
        }
        Insert: {
          code: string
          description?: string | null
          display_name: string
          is_active?: boolean
          sort_order: number
        }
        Update: {
          code?: string
          description?: string | null
          display_name?: string
          is_active?: boolean
          sort_order?: number
        }
        Relationships: []
      }
      stage_lu: {
        Row: {
          code: string
          deprecated_notice: string | null
          description: string | null
          display_name: string
          enum_code: string | null
          is_active: boolean
          sort_order: number
        }
        Insert: {
          code: string
          deprecated_notice?: string | null
          description?: string | null
          display_name: string
          enum_code?: string | null
          is_active?: boolean
          sort_order: number
        }
        Update: {
          code?: string
          deprecated_notice?: string | null
          description?: string | null
          display_name?: string
          enum_code?: string | null
          is_active?: boolean
          sort_order?: number
        }
        Relationships: []
      }
      status_lu: {
        Row: {
          code: string
          deprecated_notice: string | null
          description: string | null
          display_name: string
          enum_code: string | null
          is_active: boolean
          sort_order: number
        }
        Insert: {
          code: string
          deprecated_notice?: string | null
          description?: string | null
          display_name: string
          enum_code?: string | null
          is_active?: boolean
          sort_order: number
        }
        Update: {
          code?: string
          deprecated_notice?: string | null
          description?: string | null
          display_name?: string
          enum_code?: string | null
          is_active?: boolean
          sort_order?: number
        }
        Relationships: []
      }
      tags: {
        Row: {
          color: string | null
          created_at: string | null
          id: string
          name: string
          updated_at: string | null
        }
        Insert: {
          color?: string | null
          created_at?: string | null
          id?: string
          name: string
          updated_at?: string | null
        }
        Update: {
          color?: string | null
          created_at?: string | null
          id?: string
          name?: string
          updated_at?: string | null
        }
        Relationships: []
      }
      tasks: {
        Row: {
          contact_id: string | null
          created_at: string | null
          done_date: string | null
          due_date: string | null
          id: string
          sales_id: string | null
          text: string | null
          type: string
          updated_at: string | null
        }
        Insert: {
          contact_id?: string | null
          created_at?: string | null
          done_date?: string | null
          due_date?: string | null
          id?: string
          sales_id?: string | null
          text?: string | null
          type: string
          updated_at?: string | null
        }
        Update: {
          contact_id?: string | null
          created_at?: string | null
          done_date?: string | null
          due_date?: string | null
          id?: string
          sales_id?: string | null
          text?: string | null
          type?: string
          updated_at?: string | null
        }
        Relationships: [
          {
            foreignKeyName: "tasks_contact_id_fkey"
            columns: ["contact_id"]
            isOneToOne: false
            referencedRelation: "contacts"
            referencedColumns: ["id"]
          },
          {
            foreignKeyName: "tasks_sales_id_fkey"
            columns: ["sales_id"]
            isOneToOne: false
            referencedRelation: "sales"
            referencedColumns: ["id"]
          },
        ]
      }
      template_ratings: {
        Row: {
          created_at: string | null
          id: string
          rating: number
          review: string | null
          template_id: string
          updated_at: string | null
          user_id: string
        }
        Insert: {
          created_at?: string | null
          id?: string
          rating: number
          review?: string | null
          template_id: string
          updated_at?: string | null
          user_id: string
        }
        Update: {
          created_at?: string | null
          id?: string
          rating?: number
          review?: string | null
          template_id?: string
          updated_at?: string | null
          user_id?: string
        }
        Relationships: [
          {
            foreignKeyName: "template_ratings_template_id_fkey"
            columns: ["template_id"]
            isOneToOne: false
            referencedRelation: "layout_templates"
            referencedColumns: ["id"]
          },
          {
            foreignKeyName: "template_ratings_user_id_fkey"
            columns: ["user_id"]
            isOneToOne: false
            referencedRelation: "users"
            referencedColumns: ["id"]
          },
        ]
      }
      template_usage_analytics: {
        Row: {
          action_type: string
          context: Json | null
          created_at: string | null
          id: string
          template_id: string
          user_id: string
        }
        Insert: {
          action_type: string
          context?: Json | null
          created_at?: string | null
          id?: string
          template_id: string
          user_id: string
        }
        Update: {
          action_type?: string
          context?: Json | null
          created_at?: string | null
          id?: string
          template_id?: string
          user_id?: string
        }
        Relationships: [
          {
            foreignKeyName: "template_usage_analytics_template_id_fkey"
            columns: ["template_id"]
            isOneToOne: false
            referencedRelation: "layout_templates"
            referencedColumns: ["id"]
          },
          {
            foreignKeyName: "template_usage_analytics_user_id_fkey"
            columns: ["user_id"]
            isOneToOne: false
            referencedRelation: "users"
            referencedColumns: ["id"]
          },
        ]
      }
      template_versions: {
        Row: {
          changelog: string | null
          created_at: string | null
          created_by: string
          id: string
          is_current: boolean | null
          is_stable: boolean | null
          layout_config: Json
          template_id: string
          version_name: string | null
          version_number: string
        }
        Insert: {
          changelog?: string | null
          created_at?: string | null
          created_by: string
          id?: string
          is_current?: boolean | null
          is_stable?: boolean | null
          layout_config: Json
          template_id: string
          version_name?: string | null
          version_number: string
        }
        Update: {
          changelog?: string | null
          created_at?: string | null
          created_by?: string
          id?: string
          is_current?: boolean | null
          is_stable?: boolean | null
          layout_config?: Json
          template_id?: string
          version_name?: string | null
          version_number?: string
        }
        Relationships: [
          {
            foreignKeyName: "template_versions_created_by_fkey"
            columns: ["created_by"]
            isOneToOne: false
            referencedRelation: "users"
            referencedColumns: ["id"]
          },
          {
            foreignKeyName: "template_versions_template_id_fkey"
            columns: ["template_id"]
            isOneToOne: false
            referencedRelation: "layout_templates"
            referencedColumns: ["id"]
          },
        ]
      }
      user_preferences: {
        Row: {
          created_at: string | null
          created_by: string | null
          entity_type: string | null
          id: string
          preference_key: string
          preference_value: Json
          scope: string | null
          updated_at: string | null
          user_id: string
        }
        Insert: {
          created_at?: string | null
          created_by?: string | null
          entity_type?: string | null
          id?: string
          preference_key: string
          preference_value: Json
          scope?: string | null
          updated_at?: string | null
          user_id: string
        }
        Update: {
          created_at?: string | null
          created_by?: string | null
          entity_type?: string | null
          id?: string
          preference_key?: string
          preference_value?: Json
          scope?: string | null
          updated_at?: string | null
          user_id?: string
        }
        Relationships: [
          {
            foreignKeyName: "user_preferences_created_by_fkey"
            columns: ["created_by"]
            isOneToOne: false
            referencedRelation: "users"
            referencedColumns: ["id"]
          },
          {
            foreignKeyName: "user_preferences_user_id_fkey"
            columns: ["user_id"]
            isOneToOne: false
            referencedRelation: "users"
            referencedColumns: ["id"]
          },
        ]
      }
    }
    Views: {
      [_ in never]: never
    }
    Functions: {
      [_ in never]: never
    }
    Enums: {
      contact_role:
        | "decision_maker"
        | "influencer"
        | "buyer"
        | "end_user"
        | "gatekeeper"
        | "champion"
      interaction_type:
        | "call"
        | "email"
        | "meeting"
        | "demo"
        | "proposal"
        | "follow_up"
        | "trade_show"
        | "site_visit"
        | "contract_review"
      opportunity_stage:
        | "New Lead"
        | "Initial Outreach"
        | "Sample/Visit Offered"
        | "Awaiting Response"
        | "Feedback Logged"
        | "Demo Scheduled"
        | "Closed - Won"
        | "Closed - Lost"
        | "lead"
        | "qualified"
        | "proposal"
        | "negotiation"
        | "closed_won"
        | "closed_lost"
      opportunity_status:
        | "Active"
        | "On Hold"
        | "Closed - Won"
        | "Closed - Lost"
        | "Nurturing"
        | "Qualified"
        | "active"
        | "on_hold"
        | "nurturing"
        | "qualified"
        | "closed_won"
        | "closed_lost"
      organization_type:
        | "customer"
        | "principal"
        | "distributor"
        | "prospect"
        | "vendor"
        | "unknown"
      priority_level: "low" | "medium" | "high" | "critical"
      product_category:
        | "beverages"
        | "dairy"
        | "frozen"
        | "fresh_produce"
        | "meat_poultry"
        | "seafood"
        | "dry_goods"
        | "spices_seasonings"
        | "baking_supplies"
        | "cleaning_supplies"
        | "paper_products"
        | "equipment"
    }
    CompositeTypes: {
      [_ in never]: never
    }
  }
}

export type Tables<
  PublicTableNameOrOptions extends
    | keyof (Database["public"]["Tables"] & Database["public"]["Views"])
    | { schema: keyof Database },
  TableName extends PublicTableNameOrOptions extends { schema: keyof Database }
    ? keyof (Database[PublicTableNameOrOptions["schema"]]["Tables"] &
        Database[PublicTableNameOrOptions["schema"]]["Views"])
    : never = never,
> = PublicTableNameOrOptions extends { schema: keyof Database }
  ? (Database[PublicTableNameOrOptions["schema"]]["Tables"] &
      Database[PublicTableNameOrOptions["schema"]]["Views"])[TableName] extends {
      Row: infer R
    }
    ? R
    : never
  : PublicTableNameOrOptions extends keyof (Database["public"]["Tables"] &
        Database["public"]["Views"])
    ? (Database["public"]["Tables"] &
        Database["public"]["Views"])[PublicTableNameOrOptions] extends {
        Row: infer R
      }
      ? R
      : never
    : never

export type TablesInsert<
  PublicTableNameOrOptions extends
    | keyof Database["public"]["Tables"]
    | { schema: keyof Database },
  TableName extends PublicTableNameOrOptions extends { schema: keyof Database }
    ? keyof Database[PublicTableNameOrOptions["schema"]]["Tables"]
    : never = never,
> = PublicTableNameOrOptions extends { schema: keyof Database }
  ? Database[PublicTableNameOrOptions["schema"]]["Tables"][TableName] extends {
      Insert: infer I
    }
    ? I
    : never
  : PublicTableNameOrOptions extends keyof Database["public"]["Tables"]
    ? Database["public"]["Tables"][PublicTableNameOrOptions] extends {
        Insert: infer I
      }
      ? I
      : never
    : never

export type TablesUpdate<
  PublicTableNameOrOptions extends
    | keyof Database["public"]["Tables"]
    | { schema: keyof Database },
  TableName extends PublicTableNameOrOptions extends { schema: keyof Database }
    ? keyof Database[PublicTableNameOrOptions["schema"]]["Tables"]
    : never = never,
> = PublicTableNameOrOptions extends { schema: keyof Database }
  ? Database[PublicTableNameOrOptions["schema"]]["Tables"][TableName] extends {
      Update: infer U
    }
    ? U
    : never
  : PublicTableNameOrOptions extends keyof Database["public"]["Tables"]
    ? Database["public"]["Tables"][PublicTableNameOrOptions] extends {
        Update: infer U
      }
      ? U
      : never
    : never

export type Enums<
  PublicEnumNameOrOptions extends
    | keyof Database["public"]["Enums"]
    | { schema: keyof Database },
  EnumName extends PublicEnumNameOrOptions extends { schema: keyof Database }
    ? keyof Database[PublicEnumNameOrOptions["schema"]]["Enums"]
    : never = never,
> = PublicEnumNameOrOptions extends { schema: keyof Database }
  ? Database[PublicEnumNameOrOptions["schema"]]["Enums"][EnumName]
  : PublicEnumNameOrOptions extends keyof Database["public"]["Enums"]
    ? Database["public"]["Enums"][PublicEnumNameOrOptions]
    : never